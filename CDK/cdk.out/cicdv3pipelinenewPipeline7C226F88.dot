digraph G {
  # Arrows represent an "unlocks" relationship (opposite of dependency). So chosen
  # because the layout looks more natural that way.
  # To represent subgraph dependencies, subgraphs are represented by BEGIN/END nodes.
  # To render: `dot -Tsvg cicdv3pipelinenewPipeline7C226F88.dot > graph.svg`, open in a browser.
  node [shape="box"];
"BEGIN Build" [shape="cds", style="filled", fillcolor="#b7deff"];
"END Build" [shape="cds", style="filled", fillcolor="#b7deff"];
"Build.Build";
"Source.ankitanagarale/cdk-test-pipeline" -> "Build.Build";
"BEGIN Build" -> "Build.Build";
"Build.Build" -> "END Build";
"BEGIN test" [shape="cds", style="filled", fillcolor="#b7deff"];
"END test" [shape="cds", style="filled", fillcolor="#b7deff"];
"Build.Build" -> "BEGIN test";
"BEGIN test.cross-teest-680" [shape="cds", style="filled", fillcolor="#b7deff"];
"END test.cross-teest-680" [shape="cds", style="filled", fillcolor="#b7deff"];
"test.cross-teest-680.Deploy";
"test.cross-teest-680.Prepare" -> "test.cross-teest-680.Deploy";
"test.cross-teest-680.Prepare";
"Build.Build" -> "test.cross-teest-680.Prepare";
"BEGIN test.cross-teest-680" -> "test.cross-teest-680.Prepare";
"test.cross-teest-680.Deploy" -> "END test.cross-teest-680";
"test.Deploy Application";
"Build.Build" -> "test.Deploy Application";
"END test.cross-teest-680" -> "test.Deploy Application";
"BEGIN test" -> "BEGIN test.cross-teest-680";
"test.Deploy Application" -> "END test";
"BEGIN Source" [shape="cds", style="filled", fillcolor="#b7deff"];
"END Source" [shape="cds", style="filled", fillcolor="#b7deff"];
"Source.ankitanagarale/cdk-test-pipeline";
"BEGIN Source" -> "Source.ankitanagarale/cdk-test-pipeline";
"Source.ankitanagarale/cdk-test-pipeline" -> "END Source";
}